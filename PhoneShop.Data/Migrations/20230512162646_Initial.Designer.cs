// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneShop.Data.EF;

#nullable disable

namespace PhoneShop.Data.Migrations
{
    [DbContext(typeof(PhoneShopDbContext))]
    [Migration("20230512162646_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PhoneShop.Data.Entities.Category", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("C_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CId"), 1L, 1);

                    b.Property<string>("CName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("C_Name");

                    b.Property<int?>("CParentId")
                        .HasColumnType("int")
                        .HasColumnName("C_ParentId");

                    b.Property<int>("CSortOrder")
                        .HasColumnType("int")
                        .HasColumnName("C_SortOrder");

                    b.Property<int>("CStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("C_Status");

                    b.HasKey("CId");

                    b.ToTable("tbCategory", (string)null);
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.Manufacturer", b =>
                {
                    b.Property<int>("MId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("M_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MId"), 1L, 1);

                    b.Property<string>("MAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("M_Address");

                    b.Property<string>("MEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("M_Email");

                    b.Property<string>("MName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_Name");

                    b.Property<string>("MPhone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("M_Phone");

                    b.HasKey("MId");

                    b.ToTable("tbManufacturer", (string)null);
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.Order", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("O_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OId"), 1L, 1);

                    b.Property<DateTime>("ODate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValue(new DateTime(2023, 5, 12, 23, 26, 46, 225, DateTimeKind.Local).AddTicks(4139))
                        .HasColumnName("O_Date");

                    b.Property<int>("OStatus")
                        .HasColumnType("int")
                        .HasColumnName("O_Status");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OId");

                    b.ToTable("tbOrder", (string)null);
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.OrderDetail", b =>
                {
                    b.Property<int>("PId")
                        .HasColumnType("int")
                        .HasColumnName("P_ID");

                    b.Property<int>("OId")
                        .HasColumnType("int")
                        .HasColumnName("O_ID");

                    b.Property<decimal>("ODPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("OD_Price");

                    b.Property<int>("ODQuantity")
                        .HasColumnType("int")
                        .HasColumnName("OD_Quantity");

                    b.HasKey("PId", "OId");

                    b.HasIndex("OId");

                    b.ToTable("tbOrder_Detail", (string)null);
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.Product", b =>
                {
                    b.Property<int>("PId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("P_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PId"), 1L, 1);

                    b.Property<int>("MId")
                        .HasColumnType("int")
                        .HasColumnName("M_Id");

                    b.Property<string>("PBatteryCapacity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("P_BatteryCapacity");

                    b.Property<string>("PCamera")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("P_Camera");

                    b.Property<string>("PColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("P_Color");

                    b.Property<string>("PConnectivity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("P_Connectivity");

                    b.Property<string>("PDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("P_Description");

                    b.Property<string>("PDimension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("P_Dimension");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("P_Name");

                    b.Property<string>("POperatingSystem")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("P_Operating_System");

                    b.Property<decimal>("POriginalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("P_OriginalPrice");

                    b.Property<decimal>("PPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("P_Price");

                    b.Property<string>("PRam")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("P_Ram");

                    b.Property<string>("PResolution")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("P_Resolution");

                    b.Property<string>("PScreenSize")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("P_Screen_Size");

                    b.Property<int>("PStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("P_Stock");

                    b.Property<string>("PStorage")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("P_Storage");

                    b.Property<string>("PWeight")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("P_Weights");

                    b.HasKey("PId");

                    b.HasIndex("MId");

                    b.ToTable("tbProduct", (string)null);
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.ProductInCategory", b =>
                {
                    b.Property<int>("CId")
                        .HasColumnType("int");

                    b.Property<int>("PId")
                        .HasColumnType("int");

                    b.HasKey("CId", "PId");

                    b.HasIndex("PId");

                    b.ToTable("tbProductInCategory", (string)null);
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.OrderDetail", b =>
                {
                    b.HasOne("PhoneShop.Data.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneShop.Data.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.Product", b =>
                {
                    b.HasOne("PhoneShop.Data.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("MId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.ProductInCategory", b =>
                {
                    b.HasOne("PhoneShop.Data.Entities.Category", "Category")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("CId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhoneShop.Data.Entities.Product", "Product")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.Category", b =>
                {
                    b.Navigation("ProductInCategories");
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("PhoneShop.Data.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("ProductInCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
